---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Muulfz.
--- DateTime: 6/13/2021 11:07 PM
---
dump = require('dump');

Octo = {}

local function load_manifest()
    local manifest = GetManifest()

    load_core_modules(manifest.coreModules)

    load_plugins(manifest.plugins)
end

function load_plugins(pluginList)
    for _, pluginName in pairs(pluginList) do
        local plugin = loadPlugin(pluginName)
        plugin:OnLoad()
    end
end

function isValidManifest(file)
    return true
end

function load_core_modules(modulesList)
    for _, moduleName in pairs(modulesList) do
        loadModule("modules/" .. moduleName .. "/")
    end
end

function GetManifest(modulePath)
    local file

    if modulePath then
        file = LoadResourceFile(GetCurrentResourceName(), modulePath .. "manifest.json")
    else
        file = LoadResourceFile(GetCurrentResourceName(), "OctoManifest.json")
    end

    if file and isValidManifest(file) then
        return json.decode(file)
    end
    error("Manifest not found! " .. modulePath)
end

function loadPlugin(pluginName)
    local manifest = GetManifest('plugins/' .. pluginName .. "/")

    scopename = manifest.name
    local module = requirePlugin(manifest.name, manifest.entryPoint)

    if Octo[scopename] and Octo[scopename].meta_info.replaceable == false then
        error("Module already exists")
    end

    if module then
        Octo[scopename] = module
        Octo[scopename].meta_info = manifest

        return Octo[scopename]
    end
end

function loadModule(modulePath)
    local manifest = GetManifest(modulePath)

    local module = requireModule(manifest.name, manifest.entryPoint)

    Octo[manifest.name] = {}
    Octo[manifest.name] = module
    Octo[manifest.name].meta_info = manifest
end

RegisterCommand("octo_load", function(source, args, rawCommand)
    if Octo[args[1]] then
        print("Invalid load")
        return
    end

    local plugin = loadPlugin(args[1])
    plugin:OnLoad()
end, false)

RegisterCommand("octo_stop", function(source, args, rawCommand)
    local plugin = Octo[args[1]]
    if plugin then
        plugin:OnStop()
    end
end, false)

RegisterCommand("octo_restart", function(source, args, rawCommand)
    local plugin = Octo[args[1]]
    if plugin then
        plugin:OnRestart()
    end
end, false)

function Octo.CreateThread(func)
    Citizen.CreateThread(func)
end

Citizen.CreateThread(function()
    load_manifest()
end)


